import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;


public class ManageRoom{
    public static ArrayList<Room> rooms = new ArrayList<>();

    public static ArrayList<String> descriptions = new ArrayList<>(Arrays.asList(
    "A simple room with essential amenities for solo travelers or couples.",
    "A more spacious and upgraded room with additional amenities.",
    "A larger room with multiple beds, ideal for families or small groups.",
    "A luxurious room with separate living and sleeping areas.",
    "Designed for business travelers, featuring a workspace and premium amenities."
));

    //Import from file into ArrayList 
    
    public static ArrayList<Room> readRoomFile(String fileName){
        File room = new File ("room.txt");
        
        try {
            Scanner readRoom = new Scanner(room);

            while (readRoom.hasNextLine()){
                String line = readRoom.nextLine();
                String[] parts = line.split("\\|");

                if (parts.length == 6){
                    String id = parts[0].trim(); //clear spaces
                    String floor = id.substring(0,1);
                    int capacity = Integer.parseInt(parts[1].trim());
                    String type = parts[2].trim();
                    String description = parts[3].trim();
                    double price = Double.parseDouble(parts[4].trim());
                    String status = parts[5].trim();

                    Room r = new Room(id, floor, capacity, type, description, price, status);
                    rooms.add(r);
                }
            }
        } catch (FileNotFoundException e) {
            System.out.println("File cannot be found");
        }
        return rooms;
    }


    public static void mainPageRoom(){
        Scanner sc = new Scanner(System.in);
        int action = 0;
        System.out.println("Manage Room System");
        System.out.println("==================");

        while (true) { 
            System.out.println("[1] Add New Room\n[2] Edit Room\n[3] Delete Room\n[4]Show All Room");
            System.out.print("Please choose your action (1-4): ");

            if (sc.hasNextInt()){
                action = sc.nextInt();
                sc.nextLine();

                if (action < 1 || action > 4){
                    System.out.println("==================");
                    System.out.print("Please input a correct number.");
                }
                else{
                    break;
                }
            }
            else{
                System.out.println("==================");
                System.out.print("Please input a correct number.");
                sc.next();
            }
            }
            switch (action){
                case 1:
                    System.out.print("Confirm to add new room? (yes/no): ");
                    String addConfirm = sc.nextLine();
                    if (addConfirm.equalsIgnoreCase("yes")){
                        addNewRoom(rooms);
                    }
                    else {
                        mainPageRoom();
                    }
                    break;
                case 2:
                    System.out.print("Confirm to edit room? (yes/no): ");
                    String editConfirm = sc.nextLine();
                    if (editConfirm.equalsIgnoreCase("yes")){
                        editRoom();
                    }
                    else {
                        mainPageRoom();
                    }
                    break;
                case 3: 
                    System.out.print("Confirm to show room? (yes/no): ");
                    String showConfirm = sc.nextLine();
                    if (showConfirm.equalsIgnoreCase("yes")){
                        showRoom();
                    }
                    else {
                        mainPageRoom();
                }
                    break;
        }

    }

    
    public static void showRoom(){
        Scanner sc = new Scanner(System.in);
        int search = 0;

        System.out.println("What kind of room you want to search for?");

        while (true){
            System.out.println("[1] Room ID\n[2] Room Floor\n[3] Room Type\n[4] Room Capacity\n[5] Room Description\n[6] Room Price\n[7] Room Status\n[8] Exit");
            System.out.print("Enter the kind you want (1-9)");

            if (sc.hasNextInt()){
                search = sc.nextInt();
                sc.nextLine();

                if (search < 1 || search > 8){
                    System.out.print("\t\t===================================\n");
                    System.out.print("\t\tPlease input a correct number.\n");   
                }
                else {
                    System.out.print("Are you confirm to choose [" + search + " ] as your search?");
                    String confirmation = sc.nextLine();
                    if (confirmation.equalsIgnoreCase("yes")){
                        break;
                  }
                }   
            }
            else{
                System.out.print("\t\t===================================\n");
                System.out.print("\t\tPlease input a correct number.\n");
                sc.next(); //clear the scanner input to prevent false looping, cuz it detect it is not number and will loop
            }
        }
            switch (search){
                case 1: 
                    System.out.print("Enter the room ID: ");
                    String id = sc.nextLine();
                    ArrayList<Room> byId = SearchRoomByAttribute(rooms, search, id);
                    if (!byId.isEmpty()){
                        displayRoomDetails(byId.get(0));
                    }
                    break;
                case 2:
                    System.out.print("Enter the room floor");
                    String floor = sc.nextLine();
                    ArrayList<Room> byFloor = SearchRoomByAttribute(rooms, search, floor);
                    if (!byFloor.isEmpty()){
                        filterRoomAttributes(rooms, sc);
                    }
                    break;
                case 3:
                    System.out.print("Enter the room type: ");
                    String type = sc.nextLine();
                    ArrayList<Room> byType = SearchRoomByAttribute(rooms, search, type);
                    if (!byType.isEmpty()){
                        filterRoomAttributes(byType, sc);
                    }
                    break; 
                case 4:
                    System.out.print("Enter the room capacity: ");
                    String capacity = sc.nextLine();
                    ArrayList<Room> byCapacity = SearchRoomByAttribute(rooms, search, capacity);
                    if (!byCapacity.isEmpty()){
                        filterRoomAttributes(byCapacity, sc);
                    }
                    break;                 
                case 5:
                    System.out.print("Enter the room description (any word related: simple): ");
                    String description = sc.nextLine();
                    ArrayList<Room> byDescription = SearchRoomByAttribute(rooms, search, description);
                    if (!byDescription.isEmpty()){
                        filterRoomAttributes(byDescription, sc);
                    }
                    break;    
                case 6:
                    System.out.print("Enter the room price: RM ");
                    String price = sc.nextLine();
                    ArrayList<Room> byPrice =SearchRoomByAttribute(rooms, search, price);
                    if (!byPrice.isEmpty()){
                        filterRoomAttributes(byPrice, sc);
                    }
                    break;
                case 7:
                    System.out.print("Enter the room satus: ");
                    String status = sc.nextLine();
                    ArrayList<Room> byStatus = SearchRoomByAttribute(rooms, search, status);
                    if (!byStatus.isEmpty()){
                        filterRoomAttributes(byStatus, sc);
                    }
                    break;
                case 8:
                    mainPageRoom();
                    break;
            }
            
            System.out.println("What action you want to do next?");
            int choice = 0;
            while (true){
                System.out.println("[1] Edit Room\n[2] Delete Room\n[3] Exit");
                System.out.print("Enter the action you want next: ");
                if(sc.hasNextInt()){
                    choice = sc.nextInt();
                    sc.nextLine();
                    if (choice < 1 || choice > 3){
                        System.out.print("\t\t===================================\n");
                        System.out.print("\t\tPlease input a correct number.\n");   
                    }
                    else {
                        break;
                    }
                } else{
                    System.out.print("\t\t===================================\n");
                    System.out.print("\t\tPlease input a correct number.\n");
                    sc.next();
                }
            }
            switch (choice){
                case 1: 
                    editRoom();
                    break;
                case 2:
                    //deleteRoom();
                    break;
                case 3:
                    mainPageRoom();
                    break;
                default:
                    System.out.println("Invalid action.");
                    break;
               }
               mainPageRoom();
            }

    public static ArrayList<Room> SearchRoomByAttribute(ArrayList<Room> rooms, int option, String value){
        ArrayList<Room> matchedRooms = new ArrayList<>();

        for (Room room:rooms){
            boolean match = false;

            switch (option){//If equals then true
                case 1:
                    match = room.getId().equalsIgnoreCase(value);
                    break;
                case 2:
                    match = room.getType().equalsIgnoreCase(value);
                    break;
                case 3:
                    match = String.valueOf(room.getCapacity()).equals(value);
                    break;
                case 4:
                    match = room.getType().equalsIgnoreCase(value);
                    break;
                case 5:
                    match = room.getDescription().toLowerCase().contains(value.toLowerCase());
                    break;
                case 6:
                    match = String.valueOf(room.getPrice()).equals(value);
                    break;
                case 7:
                    match = room.getStatus().equalsIgnoreCase(value);
                    break;
            }

            if (match){
                matchedRooms.add(room);
            }
        }
        if (matchedRooms.isEmpty()){
            System.out.println("No matching room found.");
        }
        return matchedRooms;
    }

    public static void filterRoomAttributes(ArrayList<Room> rooms, Scanner sc){
        System.out.println("Filter attributes:\n[1] Room ID\n[2] Room Floor\n[3] Room Type\n[4] Room Capcity\n[5] Room Description\n[6] Room Price\n[7] Room Status");
        System.out.print("Enter the attributes you want to view (e.g. 1,2,3): ");
        String input = sc.nextLine();
        String[] options = input.split(",");

        for (Room room:rooms){
            System.out.println("-----------------");
            for (String option:options){
                switch (option.trim()){
                    case "1": 
                        System.out.println("Room ID: " + room.getId());
                        break;
                    case "2":
                        System.out.println("Room Floor: " + room.getFloor());
                        break;
                    case "3":
                        System.out.println("Room Type: " + room.getType());
                        break;
                    case "4":
                        System.out.println("Room Capacity: " + room.getCapacity());
                        break;
                    case "5":
                        System.out.println("Room Description: " + room.getDescription());
                        break;
                    case "6":
                        System.out.println("Room Price: RM " + room.getPrice());
                        break;
                    case "7":
                        System.out.println("Room Status: " + room.getStatus());
                        break;
                }
            }
        }
        
    }

    public static void displayRoomDetails(Room room){
        System.out.println("Room ID: " + room.getId());
        System.out.println("Room Floor: " + room.getFloor());
        System.out.println("Type: " + room.getType());
        System.out.println("Capacity: " + room.getCapacity());
        System.out.println("Price: " + room.getPrice());
        System.out.println("Description: " + room.getDescription());
        System.out.println("Status: " + room.getStatus());
    }

    
    
    public static void addNewRoom(ArrayList<Room> rooms){
        Scanner sc = new Scanner(System.in);

        System.out.println("Enter floor(Room number will be automated generated): ");
        String floor = sc.nextLine();

        System.out.print("Enter capacity: ");
        int capacity = sc.nextInt();
        sc.nextLine();

        System.out.println("Enter room type: ");
        String type = sc.nextLine();

        System.out.println("Enter description: ");
        String description = sc.nextLine();

        System.out.print("Enter room price: RM ");
        double price = sc.nextDouble();
        sc.nextLine();
        
        System.out.print("Enter the status of the room: ");
        String status = askAvailableOrOccupied(sc);
        
        int highestRoomNum = 0;
        for (Room room:rooms){
            if (room.getFloor().equals(floor)){
                try {
                    //Convert string to int
                    int roomId = Integer.parseInt(room.getId());
                    
                    if (roomId > highestRoomNum){
                        highestRoomNum = roomId;
                    }
                } catch (NumberFormatException e) {
                }
            }
        }

        if (highestRoomNum == 0){
            highestRoomNum = Integer.parseInt(floor + "00");
        }

        //convert to string
        String newRoomId = String.valueOf(highestRoomNum + 1);

        System.out.println("Please confirm the details below are accurate before adding new room.");
        System.out.println("RoomID: " + newRoomId + "\nFloor: " + floor + "\nCapcity: " + capacity + "\nType: " + type + "\nDescription: " + description + "\nPrice: RM " + price + "\nStatus:" + status);

        Room room = new Room(newRoomId, floor, capacity, type, description, price, status);
        rooms.add(room);//add this object to rooms array
        try {
            FileWriter myWriter = new FileWriter("room.txt", true);
            myWriter.write(newRoomId + "|" + capacity + "|" + type + "|" + description + "|" + price + "|" + "Available");
            myWriter.close();
            } catch (IOException e){
            System.out.println("The room is failed to add. Please try again.");
        }
        System.out.print("Room is added successfully!");
        mainPageRoom();
    }

    public static void editRoom(){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the room ID to edit: ");
        String targetRoom = sc.nextLine();
        boolean found = false;

        for (Room room:rooms){
            if (room.getId().equalsIgnoreCase(targetRoom)){
                found = true;
                System.out.println("Room found: ");
                displayRoomDetails(room);

                System.out.println("What do you want to edit? (Can enter multiple choice)");
                System.out.println("[1] Room Capacity\n[2] Room Type\n[3] Room Description\n[4] Room Price\n[5] Room Status");
                String editDetails = sc.nextLine();
                String[] options = editDetails.split(",");

                for (String option:options){
                    switch (option.trim()){
                        case "1":
                            int newCapacity = 0;
                            while (true) { 
                                System.out.print("Enter the new capacity: ");
                                if (sc.hasNextInt()){
                                    newCapacity = sc.nextInt();
                                    sc.nextLine();
                                    break;
                                }
                                else{
                                    System.out.print("Invalid input. Please enter an integer.");
                                    sc.next();
                                }
                            }
                            room.setCapacity(newCapacity);
                            System.out.println("Capacity of Room" + room.getId() + "updated successfully!");
                            break;
                        case "2":
                        int newType = 0;
                        while (true){
                                System.out.println("\n[1] Standard\n[2] Deluxe\n[3] Family\n[4] Suite\n[5] Executive");
                                System.out.print("Enter the type to change(1-5)");
                                if (sc.hasNextInt()){
                                    newType = sc.nextInt();
                                    sc.nextLine();
                                    if (newType < 1 || newType > 5){
                                        System.out.print("\t\t===================================\n");
                                        System.out.print("\t\tPlease input a correct number.\n");   
                                    }
                                    else{
                                        break;
                                    }
                                }
                                else{
                                    System.out.print("\t\t===================================\n");
                                    System.out.print("\t\tPlease input a correct number.\n");   
                                    sc.next();
                                }
                            }
                            switch (newType){
                                case 1:
                                    room.setType("Standard Room");
                                    break;
                                case 2:
                                    room.setType("Deluxe Room");
                                    break;
                                case 3:
                                    room.setType("Family Room");
                                    break;
                                case 4:
                                    room.setType("Suite");
                                    break;
                                case 5:
                                    room.setType("Executive Room");
                                    break;
                            }
                            System.out.println("Type of Room" + room.getId() + "updated successfully!");
                            break;
                        case "3":
                            System.out.println("Choose a description");
                            for (int i = 0; i < descriptions.size(); i++){
                                System.out.println("[" + (i+1) + "]" + descriptions.get(i));
                            }
                            System.out.println("[" + (descriptions.size() + 1) + "] Write a custom description");
                            System.out.print("Enter your choice: ");
                            int choice = sc.nextInt();
                            sc.nextLine();

                            String newDescription;

                            if (choice >= 1 && choice <= descriptions.size()){
                                newDescription = descriptions.get(choice - 1);
                                room.setDescription(newDescription);
                                System.out.println("Description of Room" + room.getId() + "updated successfully!");
                            }
                            else if (choice == descriptions.size() + 1){
                                System.out.print("Enter your custom description: ");
                                newDescription = sc.nextLine();
                                room.setDescription(newDescription);
                                System.out.println("Description of Room" + room.getId() + "updated successfully!");
                            }
                            else{
                                System.out.print("Invalid choice. Description not set.");
                            }
                            break;
                        case "4":
                            while (true){                          
                                System.out.print("Enter room price: RM ");
                                double newPrice = sc.nextDouble();
                                sc.nextLine();
                                System.out.print("Are you sure the room price is changed to RM " + newPrice + " ? (yes/no)");
                                String priceConfirm = sc.nextLine();
                                if (priceConfirm.equalsIgnoreCase("yes")){
                                    room.setPrice(newPrice);
                                    System.out.println("Price of Room" + room.getId() + "updated successfully!");
                                }
                                else{
                                    break;
                                }
                            }
                            break;
                        case "5":
                            String newStatus = askAvailableOrOccupied(sc);
                            room.setStatus(newStatus);
                            break;
                    }
                }

            }
        }
        mainPageRoom();
    }

    public static String askAvailableOrOccupied(Scanner sc){
        while (true){
            System.out.print("Enter new room status (Available/Occupied): ");
            String newStatus = sc.nextLine().trim();

            if (newStatus.equalsIgnoreCase("Available") || newStatus.equalsIgnoreCase("Occupied")){
                return capitalizeFirst(newStatus);
            } else if (newStatus.toLowerCase().contains("ava")){
                System.out.print("Did you mean 'Available'? (yes/no): ");
                String confirm = sc.nextLine();
                if (confirm.equalsIgnoreCase("yes")){
                    return "Available";
                }
                else if(newStatus.toLowerCase().contains("occ")){
                    System.out.print("Did you mean 'Occupied' ? (yes/no)");
                    if(confirm.equalsIgnoreCase("yes")){
                        return "Occupied";
                    }
                }
            } 
            System.out.println("Unrecognized input. Please enter 'Available' or 'Occupied'");
        }
    }

    public static String capitalizeFirst(String statusString) {
        return statusString.substring(0, 1).toUpperCase() + statusString.substring(1).toLowerCase();
    }
}
